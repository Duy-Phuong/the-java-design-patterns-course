[user]
	name = phuong.tran
	email = phuong.tran@mesoneer.io
[core]
	editor = code --wait
	longpaths = true
	autocrlf = true
[pull]
	rebase = false
[fetch]
	prune = false
[rebase]
	autoStash = false
[alias]
	graph = log --oneline --graph --decorate
	ls = log --pretty=format:%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]--decorate
	lg = log --pretty=format:%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]--decorate --numstat
	ll = !git log --pretty=format:\"%C(magenta)%h%Creset -%C(red)%d%Creset %s %C(dim green)(%cr) [%an]\" --abbrev-commit -30
	lds = log --pretty=format:%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]--decorate --date=short
	ll-1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	ll-2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	conflicts = diff --name-only --diff-filter=U
	diff-name = diff --name-only
	local-branches = !git branch -vv | cut -c 3- | awk '$3 !~/\\[/ { print $1 }'
	recent-branches = !git branch --sort=-committerdate | head
	authors = !git log --format='%aN <%aE>' | grep -v 'users.noreply.github.com' | sort -u --ignore-case
	rb = !sh -c \"git rebase -i HEAD~$1\" -
	rb-push = !git push -f && git reset --hard head
	s = status
	co = checkout
	cob = checkout -b
	# go back to the previous branch e.g: development/xxx
	back = checkout -
	back2 = checkout @{-1}
	cop = !sh -c \"git checkout $1 && git pull\" -
	# git branch -m <newname>
	rename-branch = branch -m
	# $2: <newname> - $1: <oldname>
	rename-remote-branch = !sh -c \"git branch -m $2 && git push origin :$1 $2 && git branch --unset-upstream && git push -u origin $2\" -
	# git push origin --delete <oldname>
	del-remote-branch = !sh -c \"git push origin --delete $1\" -
	del = branch -D
	po = push origin
	post = !sh -c \"git push --set-upstream origin $1\" -
	br = branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate
	save = !git add -A . && git commit -m
	undo = reset HEAD~1 --mixed
	clean-by-reset = !git reset --hard HEAD
	# Revert change of file
	# git checkout -- filename 
	clean-by-checkout = !git checkout -- .
	done = !git push origin HEAD
	# Revert last commit
	# git reset --soft HEAD~1
	unstage = reset --soft HEAD^
	help-me = !git config -l | grep alias | cut -c 7-
	commit-no-msg = !git commit --amend --no-edit && git push -f
	list-tag = !git tag
	del-local-tag = !sh -c \"git tag -d $1\" -
	del-remote-tag = !sh -c \"git push --delete origin $1\" -
	push-tag = !sh -c \"git push origin $1\" -
	ref-tag = !git show-ref --tags
	fix-up = !sh -c \"git commit --fixup=$1\" -
	autosquash = !sh -c \"git rebase -i --autosquash $1~1\" -
	select-change = !sh -c \"git checkout -p -- $1\" -
	stash-show-detail = !sh -c \"git stash show -p stash@{$1}\" -
	stash-show-name = !sh -c \"git stash show stash@{$1}\" -
	stash-list = !sh -c \"git stash list\" -
	stash-del = !sh -c \"git stash drop stash@{$1}\" -
	show-config = !git config --global user.name && git config --global user.email
[diff]
	guitool = meld
	tool = meld
[merge]
	guitool = meld
	tool = meld
[credential]
	helper = manager-core
[difftool "meld"]
	path = C:/Program Files (x86)/Meld/meld.exe
	cmd = \"C:/Program Files (x86)/Meld/meld.exe\" \"$LOCAL\" \"$REMOTE\"
[mergetool "meld"]
	path = C:/Program Files (x86)/Meld/meld.exe
	cmd = \"C:/Program Files (x86)/Meld/meld.exe\" \"$LOCAL\" \"$BASE\" \"$REMOTE\" --output \"$MERGED\"
[mergetool]
	keepBackup = false
[safe]
	directory = *
